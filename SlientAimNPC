-- üéØ Aimbot NPC/Dummy ‚Äî Fix: reset target khi b·∫≠t l·∫°i
-- Noir Hub Edition

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local Player = Players.LocalPlayer

local isAiming = false
local validNPCs = {}
local CurrentTarget = nil

-- üü¢ GUI (ƒëen, bo g√≥c, on xanh / off x√°m, k√©o m∆∞·ª£t)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 140, 0, 44)
ToggleButton.Position = UDim2.new(0, 10, 0, 10)
ToggleButton.Text = "AIMBOT: OFF"
ToggleButton.BackgroundColor3 = Color3.fromRGB(50,50,50) -- off = x√°m
ToggleButton.TextColor3 = Color3.fromRGB(240,240,240)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 14
ToggleButton.Parent = ScreenGui
ToggleButton.AutoButtonColor = false
ToggleButton.TextScaled = true

local UICorner = Instance.new("UICorner", ToggleButton)
UICorner.CornerRadius = UDim.new(0, 10)

-- üü¢ Ki·ªÉm tra NPC (b·ªè qua Player)
local function isNPC(obj)
    return obj and obj:IsA("Model")
        and obj:FindFirstChild("Humanoid")
        and obj:FindFirstChild("Head")
        and obj:FindFirstChild("HumanoidRootPart")
        and obj.Humanoid.Health > 0
        and not Players:GetPlayerFromCharacter(obj)
end

-- üü¢ C·∫≠p nh·∫≠t danh s√°ch NPC (scan nhanh)
local function updateNPCs()
    validNPCs = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if isNPC(obj) then
            table.insert(validNPCs, obj)
        end
    end
end

-- üü¢ L·∫•y NPC g·∫ßn nh·∫•t (theo kho·∫£ng c√°ch ƒë·∫øn camera)
local function getNearestNPC()
    local nearest, minDist = nil, math.huge
    for _, npc in ipairs(validNPCs) do
        if isNPC(npc) then
            local head = npc:FindFirstChild("Head")
            local dist = (head.Position - Camera.CFrame.Position).Magnitude
            if dist < minDist then
                minDist = dist
                nearest = npc
            end
        end
    end
    return nearest
end

-- üü¢ Aim ch·∫∑t (th·∫≥ng v√†o Head)
local function aimAt(target)
    if target and target:FindFirstChild("Head") then
        Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Head.Position)
    end
end

-- üü¢ Toggle behaviour: khi b·∫≠t -> reset target + c·∫≠p nh·∫≠t list + ch·ªçn nearest ngay
ToggleButton.MouseButton1Click:Connect(function()
    isAiming = not isAiming
    ToggleButton.Text = "AIMBOT: " .. (isAiming and "ON" or "OFF")
    ToggleButton.BackgroundColor3 = isAiming and Color3.fromRGB(0,200,0) or Color3.fromRGB(50,50,50)

    if isAiming then
        -- reset v√† ch·ªçn target m·ªõi ngay khi b·∫≠t
        CurrentTarget = nil
        updateNPCs()
        CurrentTarget = getNearestNPC()
        if CurrentTarget then
            aimAt(CurrentTarget)
        end
    else
        -- t·∫Øt th√¨ b·ªè target
        CurrentTarget = nil
    end
end)

-- üü¢ Drag GUI (m∆∞·ª£t)
local dragging, dragInput, dragStart, startPos
local function update(input)
    local delta = input.Position - dragStart
    ToggleButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

ToggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = ToggleButton.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

ToggleButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- üü¢ V√≤ng l·∫∑p ch√≠nh: n·∫øu target ch·∫øt -> update list v√† ch·ªçn nearest k·∫ø ti·∫øp
RunService.Heartbeat:Connect(function()
    if isAiming then
        -- n·∫øu kh√¥ng c√≥ target ho·∫∑c target ch·∫øt/kh√¥ng h·ª£p l·ªá => c·∫≠p nh·∫≠t v√† ch·ªçn l·∫°i
        if not CurrentTarget or not CurrentTarget.Parent or not CurrentTarget:FindFirstChild("Humanoid") or CurrentTarget.Humanoid.Health <= 0 then
            updateNPCs()
            CurrentTarget = getNearestNPC()
        end

        -- aim ch·∫∑t v√†o target hi·ªán t·∫°i (n·∫øu c√≥)
        if CurrentTarget and isNPC(CurrentTarget) then
            aimAt(CurrentTarget)
        end
    end
end)
